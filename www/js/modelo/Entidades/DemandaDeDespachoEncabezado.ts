class DemandaDeDespachoEncabezado {
    pickingDemandHeaderId: number;
    docNum: number;
    clientCode: string;
    codeRoute: string;
    codeSeller: string;
    totalAmount: number;
    serialNumber: string;
    docNumSequence: number;
    externalSourceId: number;
    isFromErp: number;
    isFromSonda: number;
    lastUpdate: Date;
    lastUpdateBy: string;
    isCompleted: number;
    wavePickingId: number;
    codeWarehouse: string;
    isAuthorized: number;
    attemptedWithError: number;
    isPostedErp: number;
    postedErp: Date;
    postedResponse: string;
    erpReference: string;
    clientName: string;
    createdDate: Date;
    erpReferenceDocNum: string;
    docEntry: number;
    isConsolidated: number;
    priority: number;
    hasMasterPack: number;
    postedStatus: number;
    owner: string;
    clientOwner: string;
    masterIdSeller: string;
    sellerOwner: string;
    sourceType: string;
    innerSaleStatus: string;
    innerSaleResponse: string;
    demandType: string;
    transferRequestId: number;
    addressCustomer: string;
    stateCode: number;
    processStatus: string;
    detalleDeDemandaDeDespacho: DemandaDeDespachoDetalle[] = [];
    reasonCancel: string;
    canastas: Canasta[] = [];
    qtyPending: number;
    qtyCanceled: number;
    qtyToDelivery: number;
    invoiceId: number;
    discount: number;
    isCanceled: number;
    taskId: number;
    isPosted: number;
    pickingDemandStatus: string;
}
var SubscriberChangeMessage=function(){function n(n,t,i){this.sender=n;this.messageType=t;this.subscriberCount=i}return n}(),SubscriptionToken=function(){function n(n,t,i){this.disposeMeCallback=t;this.deliveryCallBack=i;this.guid=n}return n.prototype.dispose=function(){this.disposeMeCallback()},n}(),Messenger=function(){function n(){this.subscriptions=new collections.Dictionary}return n.prototype.subscribe=function(n,t,i){return this.subscribeInternal(n,t,i)},n.prototype.unsubscribe=function(n,t){this.internalUnsubscribe(n,t)},n.prototype.publish=function(n,t){this.internalPublish(n,t)},n.prototype.internalPublish=function(n,t){var i,u,r;if(n==null)throw new Error("Argument null Exception");if(i=null,this.subscriptions.containsKey(t)&&(i=this.subscriptions.getValue(t).values()),i!=null&&i.length!==0)for(u=!0,r=0;r<i.length;r++)u=i[r].invoke(n)&&u},n.prototype.subscribeInternal=function(n,t,i){var f=this,r,u;if(n==null)throw new Error("Not Delivery Callback");return r=new Subscription(null,n,i),this.subscriptions.containsKey(t)?u=this.subscriptions.getValue(t):(u=new collections.Dictionary,this.subscriptions.setValue(t,u)),u.setValue(r.id,r),this.publishSubscriberChangeMessage(u,t),new SubscriptionToken(r.id,function(){return f.internalUnsubscribe(r.id,t)},n)},n.prototype.internalUnsubscribe=function(n,t){var i;this.subscriptions.containsKey(t)&&(i=this.subscriptions.getValue(t),i.containsKey(n)&&i.remove(n),this.publishSubscriberChangeMessage(i,t))},n.prototype.publishSubscriberChangeMessage=function(n,t){var i=n.size(),r=new SubscriberChangeMessage(this,t,i);this.publish(r,getType(SubscriberChangeMessage))},n}();